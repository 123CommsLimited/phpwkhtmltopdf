{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"UA-31221500-1","name":"PHP WkHtmlToPdf","tagline":"A slim PHP wrapper around wkhtmltopdf with an easy to use and clean OOP interface","body":"PHP WkHtmlToPdf provides a simple and clean interface to ease PDF creation with [wkhtmltopdf](http://code.google.com/p/wkhtmltopdf/).\r\nThe [wkhtmltopdf](http://code.google.com/p/wkhtmltopdf/) binary must be installed and working on your system. The static\r\nbinary is preferred but this class should also work with the non static version,\r\neven though a lot of features will be missing.\r\n\r\nThis project is sponsored by [PeoplePerHour](http://www.peopleperhour.com).\r\n\r\n## Basic use\r\n\r\n```php\r\n<?php\r\nrequire_once('WkHtmlToPdf.php');\r\n\r\n$pdf = new WkHtmlToPdf;\r\n\r\n// Add a HTML file, a HTML string, a page from URL or a PDF file\r\n$pdf->addPage('/home/joe/page.html');\r\n$pdf->addPage('<html>....</html>');\r\n$pdf->addPage('http://google.com');\r\n$pdf->addPage('/home/joe/my.pdf');\r\n$pdf->addCover('mycover.pdf');\r\n\r\n// Add a cover (same sources as above are possible)\r\n$pdf->addToc();\r\n\r\n// Save the PDF, or ...\r\n$pdf->saveAs('/tmp/new.pdf');\r\n\r\n// ... send to client for inline display, or ...\r\n$pdf->send();\r\n\r\n// ... send to client as file download\r\n$pdf->send('test.pdf');\r\n```\r\n\r\n## Setting options\r\n\r\nThe wkhtmltopdf binary has some global options (e.g. to set the document's DPI) and options for each PDF page (e.g. to supply a custom CSS file). Please see \"wkhtmltopdf -H\" to get a list of all available options.\r\n                                                                                                                     \r\nIn addition `phpwkhtmltopdf` also supports global page options: You can set default page options that will be applied to every page you add. You can also override these defaults per page:\r\n\r\n```php\r\n<?php\r\n$pdf = new WkHtmlToPdf($options);   // Set global PDF options\r\n$pdf->setOptions($options);         // Set global PDF options (alternative)\r\n$pdf->setPageOptions($options);     // Set default page options\r\n$pdf->addPage($page, $options);     // Add page with options (overrides default page options)\r\n```\r\n\r\n## Special global options\r\n\r\nYou can use these special global options to set up some file paths:\r\n\r\n* bin: path to the wkhtmltopdf binary. Defaults to `/usr/bin/wkhtmltopdf`.\r\n* tmp: path to tmp directory. Defaults to the PHP temp dir.\r\n\r\n## Error handling\r\n\r\n`saveAs()` and `save()` will return false on error. In this case the detailed error message from wkhtmltopdf can be obtained through `getError()`.\r\n\r\n## Full example\r\n\r\nFor me `wkhtmltopdf` seems to create best results with smart shrinking turned off. \r\nBut then i had scaling issues which went away if i set all margins to zero and instead\r\nadd the margins through CSS. We can also use `cm` in CSS as this is more apropriate for print styles.\r\n\r\n```php\r\n<?php\r\n$pdf = new WkHtmlToPdf(array(\r\n    'no-outline',         // Make Chrome not complain\r\n    'margin-top'    => 0,\r\n    'margin-right'  => 0,\r\n    'margin-bottom' => 0,\r\n    'margin-left'   => 0,\r\n);\r\n\r\n$pdf->setPageOptions(array(\r\n    'disable-smart-shrinking',\r\n    'user-style-sheet' => 'pdf.css',\r\n);\r\n\r\n$pdf->addPage('demo.html');\r\n\r\n$pdf->send();\r\n```\r\n\r\n**demo.html**\r\n```html\r\n<!DOCTYPE html>\r\n<head>\r\n</head>\r\n<body>\r\n\r\n    <div id=\"print-area\">\r\n        <div id=\"header\">\r\n            This is an example header.\r\n        </div>\r\n        <div id=\"content\">\r\n            <h1>Demo</h1>\r\n            <p>This is example content</p>\r\n        </div>\r\n        <div id=\"footer\">\r\n            This is an example footer.\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>\r\n```\r\n\r\n**pdf.css**\r\n```css\r\n/* Define page size. Requires print-area adjustment! */\r\nbody {\r\n    margin:     0;\r\n    padding:    0;\r\n    width:      21cm;\r\n    height:     29.7cm;\r\n}\r\n\r\n/* Printable area */\r\n#print-area {\r\n    position:   relative;\r\n    top:        1cm;\r\n    left:       1cm;\r\n    width:      19cm;\r\n    height:     27.6cm;\r\n\r\n    font-size:      10px;\r\n    font-family:    Arial;\r\n}\r\n\r\n#header {\r\n    height:     3cm;\r\n\r\n    background: #ccc;\r\n}\r\n#footer {\r\n    position:   absolute;\r\n    bottom:     0;\r\n    width:      100%;\r\n    height:     3cm;\r\n\r\n    background: #ccc;\r\n}\r\n```"}